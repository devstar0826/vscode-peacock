steps:
  # Archive files
  # Compress files into .7z, .tar.gz, or .zip
  - task: ArchiveFiles@2
    displayName: 'Create Docs Pipeline Artifact'
    inputs:
      rootFolderOrFile: '$(Build.SourcesDirectory)/docs/.vuepress/dist'
      includeRootFolder: false
      archiveType: 'zip' # Options: zip, 7z, tar, wim
      #tarCompression: 'gz' # Optional. Options: gz, bz2, xz, none
      archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
      replaceExistingArchive: true
      #verbose: # Optional
      #quiet: # Optional
    condition: and(succeeded(), eq(variables['node_version'], '12.x'), eq(variables['Agent.OS'], 'Linux'))

  - task: PublishPipelineArtifact@0
    displayName: 'Publish Docs Pipeline Artifact'
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    # Only create the release for Linux on Node 12
    condition: and(succeeded(), eq(variables['node_version'], '12.x'), eq(variables['Agent.OS'], 'Linux'))

  - task: ExtractFiles@1
    displayName: 'Extract what we jsut zipped - because'
    inputs:
      archiveFilePatterns: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
      destinationFolder: '$(Build.ArtifactStagingDirectory)/extracted'
      cleanDestinationFolder: true
    condition: and(succeeded(), eq(variables['node_version'], '12.x'), eq(variables['Agent.OS'], 'Linux'))

  - task: AzureCLI@1
    displayName: 'Upload the files to Azure Storage'
    inputs:
      azureSubscription: 'john.papa(cfd12dd7-4872-4b83-8cd8-2ed6083047d7)'
      scriptLocation: 'inlineScript'
      inlineScript: 'az storage blob upload-batch -d $web --account-name papapeacockstorage -s '$(Build.ArtifactStagingDirectory)/extracted' --pattern *


